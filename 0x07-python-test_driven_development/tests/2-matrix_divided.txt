>>> div = __import__('2-matrix_divided').matrix_divided

>>> div([[5, 10, 65], [3, 30, 90], [20, 200, 400]], 5)
[[1.0, 2.0, 13.0], [0.6, 6.0, 18.0], [4.0, 40.0, 80.0]]

>>> div([[5, -10, 65], [3, 30, 90], [20, -200, 400]], 5)
[[1.0, -2.0, 13.0], [0.6, 6.0, 18.0], [4.0, -40.0, 80.0]]

>>> div([[-5, -10, -65], [3, 30, 90], [20, 200, 400]], 5)
[[-1.0, -2.0, -13.0], [0.6, 6.0, 18.0], [4.0, 40.0, 80.0]]

>>> div([[-5, -10, -65], [3, 30, 90], [20, 200, "400"]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> div([[-5, -10, -65], [3, 30, 90], [20, 200]], 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> div([[-5, -10, -65], [3, 30, 90], [20, 200]], 0)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> div([[-5, -10, -65], [3, 30, 90], [20, 200, 30]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> div([[-5, -10, -65], [3, 30, 90]], 30)
[[-0.17, -0.33, -2.17], [0.1, 1.0, 3.0]]

>>> div([-5, -10, -65], [3, 30, 90], 30)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> div([-5, -10, -65], 30)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
